//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Func.Lang {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Func.Lang.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} cannot be null or empty..
        /// </summary>
        public static string ArgumentNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot delete file &quot;{0}&quot;..
        /// </summary>
        public static string CannotDeleteFile {
            get {
                return ResourceManager.GetString("CannotDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The Current property is null..
        /// </summary>
        public static string GenericSettingsProviderCurrentNull {
            get {
                return ResourceManager.GetString("GenericSettingsProviderCurrentNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cannot save settings because of validation errors..
        /// </summary>
        public static string GenericSettingsProviderValidationErrors {
            get {
                return ResourceManager.GetString("GenericSettingsProviderValidationErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The target property must be a boolean..
        /// </summary>
        public static string InverseBooleanConverterTargetTypeNotBoolean {
            get {
                return ResourceManager.GetString("InverseBooleanConverterTargetTypeNotBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value is invalid.
        /// </summary>
        public static string NumericRangeRuleInvalid {
            get {
                return ResourceManager.GetString("NumericRangeRuleInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value cannot be null.
        /// </summary>
        public static string NumericRangeRuleNull {
            get {
                return ResourceManager.GetString("NumericRangeRuleNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} of type &apos;{1}&apos; must be assignable from type &apos;{2}&apos;..
        /// </summary>
        public static string TypeMustBeAssignableFromBase {
            get {
                return ResourceManager.GetString("TypeMustBeAssignableFromBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} of type &apos;{1}&apos; must derive from type &apos;{2}&apos;..
        /// </summary>
        public static string TypeMustDeriveFromBase {
            get {
                return ResourceManager.GetString("TypeMustDeriveFromBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Validation for {0} failed!.
        /// </summary>
        public static string ValidationFailed {
            get {
                return ResourceManager.GetString("ValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value empty.
        /// </summary>
        public static string ValueEmpty {
            get {
                return ResourceManager.GetString("ValueEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is not valid for parameter {1} of type {2}..
        /// </summary>
        public static string ValueInvalidEnum {
            get {
                return ResourceManager.GetString("ValueInvalidEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The passed value may not be empty or whithespace..
        /// </summary>
        public static string ValueIsNullOrWhiteSpace {
            get {
                return ResourceManager.GetString("ValueIsNullOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} must be {1}..
        /// </summary>
        public static string ValueRange {
            get {
                return ResourceManager.GetString("ValueRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} must be {1} and {2}..
        /// </summary>
        public static string ValueRangeAnd {
            get {
                return ResourceManager.GetString("ValueRangeAnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} must be between {1} and {2}..
        /// </summary>
        public static string ValueRangeBetween {
            get {
                return ResourceManager.GetString("ValueRangeBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на greater than {0}.
        /// </summary>
        public static string ValueRangeGreaterThan {
            get {
                return ResourceManager.GetString("ValueRangeGreaterThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на greater than or equal to {0}.
        /// </summary>
        public static string ValueRangeGreaterThanInclusive {
            get {
                return ResourceManager.GetString("ValueRangeGreaterThanInclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на less than {0}.
        /// </summary>
        public static string ValueRangeLessThan {
            get {
                return ResourceManager.GetString("ValueRangeLessThan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на less than or equal to {0}.
        /// </summary>
        public static string ValueRangeLessThanInclusive {
            get {
                return ResourceManager.GetString("ValueRangeLessThanInclusive", resourceCulture);
            }
        }
    }
}
